#仅仅输出SQL和表数据的最精简的配置
log4j.rootLogger=DEBUG,Console

#此句为定义名为stdout的输出端是哪种类型，可以是
##org.apache.log4j.ConsoleAppender（控制台），
##org.apache.log4j.FileAppender（文件），
##org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
##org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
##org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
  
#Console   控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender  
log4j.appender.console.Target=System.out
log4j.appender.Console.layout=org.apache.log4j.PatternLayout  
#log4j.appender.Console.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n  
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss SSS}|%5p|%F.%M:%L|%m%n

log4j.logger.org.apache=ERROR
log4j.logger.org.mybatis=ERROR
log4j.logger.org.springframework=ERROR
#这个须要
log4j.logger.log4jdbc.debug=ERROR
log4j.logger.com.gk.mapper=ERROR

log4j.logger.jdbc.audit=ERROR
log4j.logger.jdbc.resultset=ERROR
#这个打印SQL语句非常重要
log4j.logger.jdbc.sqlonly=DEBUG
log4j.logger.jdbc.sqltiming=ERROR
log4j.logger.jdbc.connection=FATAL
#########################################################

#log4j.rootLogger=INFO,stdout,info,warn,error,file
##控制台输出
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.Threshold=INFO
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss SSS}|%5p|%F.%M:%L|%m%n
##INFO所有日志
#log4j.logger.file=info
#log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.file.File=../logs/info.log
#log4j.appender.file.datePattern='.'yyyy-MM-dd'.log'
#log4j.appender.file.append=true
#log4j.appender.file.Threshold=INFO
#log4j.appender.file.encoding=UTF-8
#log4j.appender.file.ImmediateFlush=true
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss SSS}|%5p|%F.%M:%L|%m%n
##INFO日志
#log4j.logger.info=info
#log4j.appender.info=com.platform.log4j.GradeLogDailyRollingFileAppender
#log4j.appender.info.File=../logs/info/info.log
#log4j.appender.info.datePattern='.'yyyy-MM-dd'.log'
#log4j.appender.info.append=true
#log4j.appender.info.Threshold=INFO
#log4j.appender.info.encoding=UTF-8
#log4j.appender.info.ImmediateFlush=true
#log4j.appender.info.layout=org.apache.log4j.PatternLayout
#log4j.appender.info.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss SSS}|%5p|%F.%M:%L|%m%n
##WARN日志
#log4j.appender.warn=com.platform.log4j.GradeLogDailyRollingFileAppender
#log4j.appender.warn.File=../logs/warn/warn.log
#log4j.appender.warn.datePattern='.'yyyy-MM-dd'.log'
#log4j.appender.warn.append=true
#log4j.appender.warn.Threshold=WARN
#log4j.appender.warn.encoding=UTF-8
#log4j.appender.warn.ImmediateFlush=true
#log4j.appender.warn.layout=org.apache.log4j.PatternLayout
#log4j.appender.warn.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss SSS}|%5p|%F.%M:%L|%m%n
##ERROR日志
#log4j.appender.error=com.platform.log4j.GradeLogDailyRollingFileAppender
#log4j.appender.error.File=../logs/error/error.log
#log4j.appender.error.datePattern='.'yyyy-MM-dd'.log'
#log4j.appender.error.append=true
#log4j.appender.error.Threshold=ERROR
#log4j.appender.error.encoding=UTF-8
#log4j.appender.error.ImmediateFlush=true
#log4j.appender.error.layout=org.apache.log4j.PatternLayout
#log4j.appender.error.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss SSS}|%5p|%F.%M:%L|%m%n
##执行慢的SQL
#log4j.logger.com.alibaba.druid.filter.stat.StatFilter=ERROR,slowsql
#log4j.appender.slowsql=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.slowsql.File=../logs/slow_sql/slow_sql.log
#log4j.appender.slowsql.datePattern='.'yyyy-MM-dd'.log'
#log4j.appender.slowsql.append=true
#log4j.appender.slowsql.encoding=UTF-8
#log4j.appender.slowsql.ImmediateFlush=true
#log4j.appender.slowsql.layout=org.apache.log4j.PatternLayout
#log4j.appender.slowsql.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss SSS}|%5p|%F.%M:%L|%m%n
##控制台输出所有SQL
##便于调试  生产环境注释
#log4j.logger.com.platform.dao=DEBUG,sql
#log4j.appender.sql=org.apache.log4j.ConsoleAppender
#log4j.appender.sql.Target=System.out
#log4j.appender.sql.layout=org.apache.log4j.PatternLayout
#log4j.appender.sql.layout.ConversionPattern=%m %n

#########################################################

##此句为定义名为stdout的输出端是哪种类型，可以是
##org.apache.log4j.ConsoleAppender（控制台），
##org.apache.log4j.FileAppender（文件），
##org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
##org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
##org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#
##此句为定义名为stdout的输出端的layout是哪种类型，可以是
##org.apache.log4j.HTMLLayout（以HTML表格形式布局），
##org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
##org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
##org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#
##如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern，打印参数如下：
##%m 输出代码中指定的消息
##%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
##%r 输出自应用启动到输出该log信息耗费的毫秒数
##%c 输出所属的类目，通常就是所在类的全名
##%t 输出产生该日志事件的线程名
##%n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
##%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式
##比如：%d{yyyy MMM dd HH:mm:ss,SSS} 输出类似：2002年10月18日 22：10：28，921
##%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
##[Log4JDemo]是log信息的开头，可以为任意字符，一般为项目简称。
##log4j.appender.stdout.layout.ConversionPattern=[Log4JDemo] %p [%t] %C.%M(%L) | %m%n
##log4j.appender.stdout.layout.ConversionPattern=[Log4JDemo] %p [%t] %C.%M(%L) | %m%n
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss SSS}|%5p|%F.%M:%L|%m%n
#
##设置日志文件
#log4j.appender.LogFile=org.apache.log4j.FileAppender
#log4j.appender.LogFile.File=log4j.log
#log4j.appender.LogFile.layout=org.apache.log4j.PatternLayout
#log4j.appender.LogFile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %l  %m%n
#
##此句为将等级为ALL的日志信息输出到stdout和LogFile这两个目的地
##stdout和R的定义在下面的代码，可以任意起名
##等级可分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL
##如果配置OFF则不打出任何信息
##如果配置为INFO这样只显示INFO, WARN, ERROR的log信息，而DEBUG信息不会被显示，
##log4j.rootCategory=ERROR,stdout,LogFile
##log4j.rootCategory=ERROR,LogFile
#log4j.rootCategory=INFO,stdout



